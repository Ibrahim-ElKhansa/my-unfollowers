@use './variables' as *;

.settings {
  margin: clamp(1.5rem, 4vw, 2rem) 0;
  max-width: min(900px, 95vw);
  width: 100%;
  
  &__container {
    background-color: $background-secondary;
    border-radius: 12px;
    overflow: hidden;
    border: 1px solid $border-color;
    padding: clamp(1rem, 3vw, 1.5rem);
  }
  
  &__title {
    font-size: clamp(1rem, 2.5vw, 1.2rem);
    font-weight: 600;
    color: $text-primary;
    margin: 0 0 clamp(1rem, 2vw, 1.25rem) 0;
    display: flex;
    align-items: center;
    gap: clamp(0.4rem, 1vw, 0.5rem);
    line-height: 1.3;
  }
  
  &__option {
    margin-bottom: clamp(1rem, 2vw, 1.25rem);
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  &__checkbox {
    display: flex;
    align-items: flex-start;
    gap: clamp(0.5rem, 1.5vw, 0.75rem);
    cursor: pointer;
    margin-bottom: clamp(0.5rem, 1vw, 0.75rem);
    
    input[type="checkbox"] {
      position: absolute;
      opacity: 0;
      width: 0;
      height: 0;
    }
  }
  
  &__checkbox-custom {
    width: clamp(1rem, 2.5vw, 1.2rem);
    height: clamp(1rem, 2.5vw, 1.2rem);
    border: 2px solid $border-color;
    border-radius: 4px;
    background-color: transparent;
    transition: all 0.2s ease;
    position: relative;
    flex-shrink: 0;
    margin-top: 0.1rem;
    
    &::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(0);
      width: 6px;
      height: 10px;
      border: solid white;
      border-width: 0 2px 2px 0;
      transform-origin: center;
      transition: transform 0.2s ease;
    }
    
    input[type="checkbox"]:checked + & {
      background-color: $primary-color;
      border-color: $primary-color;
      
      &::after {
        transform: translate(-50%, -60%) rotate(45deg) scale(1);
      }
    }
    
    input[type="checkbox"]:focus + & {
      box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
    }
  }
  
  &__label {
    font-size: clamp(0.9rem, 2.2vw, 1rem);
    font-weight: 500;
    color: $text-primary;
    line-height: 1.4;
    user-select: none;
  }
  
  &__description {
    font-size: clamp(0.8rem, 2vw, 0.9rem);
    color: $text-secondary;
    line-height: 1.5;
    margin: 0;
    padding-left: clamp(1.5rem, 4vw, 1.95rem);
    
    @media (max-width: 640px) {
      padding-left: 0;
      margin-top: 0.5rem;
    }
  }
  
  &__data-info {
    margin-top: clamp(1.5rem, 3vw, 2rem);
    padding-top: clamp(1rem, 2vw, 1.25rem);
    border-top: 1px solid $border-color;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    
    @media (max-width: 640px) {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }
  }
  
  &__data-text {
    font-size: clamp(0.85rem, 2vw, 0.95rem);
    color: $success-color;
    margin: 0;
    line-height: 1.4;
    flex: 1;
  }
  
  &__reload-btn {
    background-color: $background-card;
    border: 1px solid $border-color;
    color: $text-secondary;
    padding: clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2.5vw, 1.25rem);
    border-radius: 8px;
    cursor: pointer;
    font-size: clamp(0.8rem, 2vw, 0.9rem);
    font-weight: 500;
    transition: all 0.2s ease;
    white-space: nowrap;
    
    &:hover {
      background-color: $hover-color;
      color: $text-primary;
      border-color: $primary-color;
      transform: translateY(-1px);
    }
    
    &:active {
      transform: translateY(0);
    }
  }
}
